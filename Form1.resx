<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>